/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
// customer ID 219 
package cms;
import function.validate;
import function.DBConnection;
import javax.swing.JOptionPane;
import java.sql.*;
import java.time.LocalDate;
import java.time.ZoneId;
import java.sql.Date;
import javax.swing.JDesktopPane;
import javax.swing.JTextField;
/**
 *
 * @author Computer
 */
public class courier extends javax.swing.JInternalFrame {

    private Object java;

    /**
     * Creates new form courier
     */
    public courier() {
        
        initComponents();
        inivariable1();
         
        setDatehide();
        
        
    }
    private Connection myconn2;
    public courier(Connection myconn1) {
        
        initComponents();
        inivariable1();
         
        setDatehide();
        myconn2= myconn1;
        
    }
    
    private void setDatehide(){
        LocalDate date = LocalDate.now();
        ZoneId defaultZoneId = ZoneId.systemDefault();
        java.util.Date date1 =  Date.from(date.atStartOfDay(defaultZoneId).toInstant());
        delivery_date.setMinSelectableDate(date1);
    }
    private void inivariable1(){
        if(validate.getValueC()==1){
           back_search.setText("SEARCH");
            next.setText("UPDATE");  
        }
        else{
            
            back_search.setText("BACK");
            next.setText("NEXT");
            customerID.setVisible(false);
            Sender_Customer_id.setVisible(false);
            Receiver_Customer_id.setVisible(false);
            jLabel9.setVisible(false);
         status1.setVisible(false);
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        weight = new javax.swing.JTextField();
        service_type = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        discount = new javax.swing.JTextField();
        charges = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        amount_paid = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        employee_id = new javax.swing.JTextField();
        set_employee_id = new javax.swing.JLabel();
        next = new javax.swing.JButton();
        back_search = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        customerID = new javax.swing.JLabel();
        courier_id = new javax.swing.JTextField();
        Sender_Customer_id = new javax.swing.JTextField();
        status = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        status1 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        delivery_date = new com.toedter.calendar.JDateChooser();
        jLabel11 = new javax.swing.JLabel();
        Receiver_Customer_id = new javax.swing.JTextField();

        setTitle("Courier Detail");
        setPreferredSize(new java.awt.Dimension(747, 458));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(729, 458));

        jPanel1.setPreferredSize(new java.awt.Dimension(714, 420));

        jLabel2.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Weight");

        service_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "[--Select One--]", "Simple", "Express" }));
        service_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                service_typeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Service Type");

        jLabel4.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Charges");

        jLabel5.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Discount");

        discount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                discountMouseClicked(evt);
            }
        });
        discount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                discountKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                discountKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Amount Paid");

        jLabel7.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Employee ID");

        employee_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                employee_idKeyReleased(evt);
            }
        });

        set_employee_id.setText("Record Not Found");

        next.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        next.setText("NEXT");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        back_search.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        back_search.setText("BACK");
        back_search.setPreferredSize(new java.awt.Dimension(50, 24));
        back_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_searchActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Courier ID");

        customerID.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        customerID.setForeground(new java.awt.Color(0, 0, 0));
        customerID.setText("Sender Customer ID");

        javax.swing.GroupLayout statusLayout = new javax.swing.GroupLayout(status);
        status.setLayout(statusLayout);
        statusLayout.setHorizontalGroup(
            statusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 171, Short.MAX_VALUE)
        );
        statusLayout.setVerticalGroup(
            statusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        jLabel9.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Status");

        status1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Shipped", "Cancel", "Delivered" }));

        jLabel10.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Delivery Date");

        jLabel11.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Receiver  Customer ID");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel10)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(employee_id, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(47, 47, 47)
                                            .addComponent(set_employee_id))
                                        .addComponent(charges, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(delivery_date, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                    .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(39, 39, 39))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                    .addComponent(courier_id, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(43, 43, 43)))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(customerID)
                                                .addComponent(jLabel11)))
                                        .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(service_type, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(66, 66, 66)
                                        .addComponent(jLabel9)
                                        .addGap(31, 31, 31)))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(status1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(Receiver_Customer_id, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Sender_Customer_id, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))))
                            .addComponent(amount_paid, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(back_search, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(397, 397, 397)
                        .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courier_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(customerID)
                    .addComponent(Sender_Customer_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(weight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Receiver_Customer_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11))
                    .addComponent(jLabel2))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(service_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(status1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(charges, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(amount_paid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(employee_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(set_employee_id))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(back_search, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(delivery_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
        );

        setBounds(0, 0, 747, 458);
    }// </editor-fold>//GEN-END:initComponents
    String CourierID;
    String Customer_ID;
    String Weight;
    String Charges;
    String Discount;
    String AmountPaid;
    String employeeID;
    String serviceType;
    String status2;
    private static final int MYSQL_DUPLICATE_PK = 1062;
    
    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // TODO add your handling code here:
        iniVeriables();
        
        
       
        if(validate.getValueC()==1){
            try(
                 Connection myconn = DBConnection.getConnection();
                 ){
            
           if(!CourierID.isEmpty()  )
           {
            
            if(!Weight.isEmpty()){
                PreparedStatement st = myconn.prepareStatement("update couriers set weight=? where Cr_id=?");
                st.setString(1, Weight);
                st.setInt(2, Integer.parseInt(CourierID));
                st.executeUpdate();
                
            }
            if(!Charges.isEmpty()){
                PreparedStatement st = myconn.prepareStatement("update couriers set charges=? where Cr_id=?");
                st.setString(1, Charges);
                st.setInt(2, Integer.parseInt(CourierID));
                st.executeUpdate();
                
            }
            if(!Discount.isEmpty()){
                PreparedStatement st = myconn.prepareStatement("update couriers set discount=? where Cr_id=?");
                st.setString(1, Discount);
                st.setInt(2, Integer.parseInt(CourierID));
                st.executeUpdate();
                
            }
           /* if(!AmountPaid.isEmpty()){
                PreparedStatement st = myconn.prepareStatement("update couriers set amt_paid=? where Cr_id=?");
                st.setString(1, AmountPaid);
                st.setInt(2, Integer.parseInt(CourierID));
                st.executeUpdate();
                
            }*/
            if(!employeeID.isEmpty()){
                PreparedStatement st = myconn.prepareStatement("update couriers set E_id=? where Cr_id=?");
                st.setString(1, employeeID);
                st.setInt(2, Integer.parseInt(CourierID));
                st.executeUpdate();
             
             
                
            }
            if(!status2.isEmpty()){
                 PreparedStatement st = myconn.prepareStatement("update couriers set Status=? where Cr_id=?");
                st.setString(1, status2);
                st.setInt(2, Integer.parseInt(CourierID));
                st.executeUpdate();
            }
            if(!serviceType.isEmpty()){
                 PreparedStatement st = myconn.prepareStatement("update couriers set Type=? where Cr_id=?");
                st.setString(1, serviceType);
                st.setInt(2, Integer.parseInt(CourierID));
                st.executeUpdate();
            }
            delivery_date.setDateFormatString("yyyy-MM-dd");
            String date_req =((JTextField) delivery_date.getDateEditor().getUiComponent()).getText();
            if(!date_req.isEmpty()){
                
                PreparedStatement st = myconn.prepareStatement("update sends set date = ? where Cr_id = ? and C_id = ? ");
                java.sql.Date d1 = Date.valueOf(date_req);
                st.setDate(1,  d1);
                st.setInt(2, Integer.parseInt(CourierID));
                st.setInt(3, Integer.parseInt(Customer_ID));
                st.executeUpdate();
            }    
            JOptionPane.showMessageDialog(null,"Updation Sucessfull" );
            cleardata();
           }
           else
           {
              JOptionPane.showMessageDialog(null,"Fill All required data" ); 
           }
            
       }
         catch(SQLException e)
        {
            System.err.print(e);
        }    
        }
        else{
           
        
        try(
                //Connection myconn1 = DBConnection.getConnection();
                PreparedStatement st = myconn2.prepareStatement("insert into couriers(Cr_id,Status,Weight,Type,charges,discount,E_id) values (?,?,?,?,?,?,?)");
                
                
                ){
               
               
            if(!CourierID.isEmpty() && !Weight.isEmpty() && !Charges.isEmpty() && !Discount.isEmpty() && !AmountPaid.isEmpty() && !employeeID.isEmpty() && service_type.getSelectedIndex()!=0){
                st.setInt(1, Integer.parseInt(CourierID));
                st.setString(2, "Shipped");
                st.setInt(3, Integer.parseInt(Weight));
                st.setString(4, serviceType);
                st.setInt(5, Integer.parseInt(Charges));
                st.setInt(6, Integer.parseInt(Discount));
                //st.setInt(7, Integer.parseInt(AmountPaid));
                st.setInt(7, Integer.parseInt(employeeID));
                st.executeUpdate();
                
                delivery_date.setDateFormatString("yyyy-MM-dd");
                String date_req =((JTextField) delivery_date.getDateEditor().getUiComponent()).getText();
                validate.setDeliveryDate(date_req);
               
                //
                validate.setValueCourierId(Integer.parseInt(CourierID));
                validate.setValuenext(true);
                
                //cleardata();
                
                validate.setValue(2);
                customer c =new customer(myconn2);
                JDesktopPane j = getDesktopPane();
                j.add(c);
                c.show();   
            }
            else{
                JOptionPane.showMessageDialog(null,"Fill All required data" );
            }
        }
        catch(SQLException e)
        {
            System.err.print(e);
           if(e.getErrorCode() == MYSQL_DUPLICATE_PK ){
                 JOptionPane.showMessageDialog(null,"Duplicate Courier ID" );
            }
        }
        }
    }//GEN-LAST:event_nextActionPerformed

    private void back_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_searchActionPerformed
        // TODO add your handling code here:
        if(validate.getValueC()==1){
            if(!courier_id.getText().equals("")) {
                displayCourier();
            }
            else{
                int a=0;
                boolean b=true;
                if(!Sender_Customer_id.getText().equals("")){
                    
                     a=Integer.parseInt(Sender_Customer_id.getText());
                    b=true;
                 }
                if(!Receiver_Customer_id.getText().equals("")){
                    
                     a =Integer.parseInt(Receiver_Customer_id.getText());
                     b=false;
                }
                if(a!=0){
                try
                    (
                        Connection myconn = DBConnection.getConnection();
                        PreparedStatement st1=  myconn.prepareStatement("select * from customers where C_id=?");
                     ){
                            
                            st1.setInt(1, a);
                            ResultSet rs1= st1.executeQuery();
               
                            if(rs1.next()){
                                Searching_Customer s = new Searching_Customer(a,b,this);
                               // modal = new JDialog(myFrame, "This is a modal!", true);
                             //   modal.setVisible(true);
                              //  modal.setLocationRelativeTo(null);
                                 s.setVisible(true);  
                             }
                            else{
                                JOptionPane.showMessageDialog(null,"Customer Not Found" );
                             }    
                        }
                        catch(SQLException e){
                                System.err.print(e);
                           }
                }
            }
            
        }
        else {
            validate.setValue(1);
            this.setVisible(false);
        }
        
    }//GEN-LAST:event_back_searchActionPerformed

    private void employee_idKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employee_idKeyReleased
        // TODO add your handling code here:
        
        searchEmployee();
    }//GEN-LAST:event_employee_idKeyReleased
    private void searchEmployee(){
        employeeID = employee_id.getText();
        try
        (
                Connection myconn = DBConnection.getConnection();
                PreparedStatement st1=  myconn.prepareStatement("select E_name from employee where E_id=?");
                ){
             if(!employeeID.isEmpty()){
               st1.setInt(1, Integer.parseInt(employeeID));
                ResultSet rs1= st1.executeQuery();
               if(rs1.next()){
                   set_employee_id.setText(rs1.getString("E_name"));      
               }
               else{
                    
                    set_employee_id.setText("Record Not Found");
               }
                            
           }
            
        }
        catch(SQLException e)
        {
            System.err.print(e);
        }
    }
    private void discountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountKeyReleased
        // TODO add your handling code here:
        amount_paid.setText( Integer.toString(Integer.parseInt(charges.getText()) - Integer.parseInt(charges.getText()) * Integer.parseInt(discount.getText()) / 100));
    }//GEN-LAST:event_discountKeyReleased

    private void discountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_discountMouseClicked
        // TODO add your handling code here:
        Charges=charges.getText();
        if(Charges.isEmpty()){
            JOptionPane.showMessageDialog(null,"Enter a Charges First" );
        }
    }//GEN-LAST:event_discountMouseClicked

    private void discountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
         
        if(Character.isDigit(c) || Character.isISOControl(c)){
             discount.setEditable(true);
             
         }
        else{
             discount.setEditable(false);
         }
    }//GEN-LAST:event_discountKeyPressed

    private void service_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_service_typeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_service_typeActionPerformed
    public void setdata()
    {
        int getCourier = validate.getCourierValue();
        courier_id.setText(String.valueOf(getCourier));
        displayCourier();
    }
    private void displayCourier(){
        try
                    (
                        Connection myconn = DBConnection.getConnection();
                        PreparedStatement st1=  myconn.prepareStatement("select * from couriers where Cr_id=?");
                        PreparedStatement st=  myconn.prepareStatement("select * from (select sends.*, row_number() over (partition by cr_id) as rn from sends)t1 where rn = 2 and Cr_id = ?");
                        PreparedStatement st2=  myconn.prepareStatement("select * from (select sends.*, row_number() over (partition by cr_id) as rn from sends)t1 where rn = 1 and Cr_id = ?");
                        ){
                    CourierID=courier_id.getText();
                    
                    st1.setInt(1, Integer.parseInt(CourierID));
                    ResultSet rs1= st1.executeQuery();
                    
                    
                    if(rs1.next()){
                        
                        weight.setText(rs1.getString("Weight"));
                        charges.setText(rs1.getString("charges"));
                        discount.setText(rs1.getString("discount"));
                        amount_paid.setText(rs1.getString("amt_paid"));
                        employee_id.setText(rs1.getString("E_id"));
                        if(!rs1.getString("E_id").isEmpty())
                            searchEmployee();
                        if(rs1.getString("Type").endsWith("Simple"))
                            service_type.setSelectedIndex(1);
                        else
                            service_type.setSelectedIndex(2);
                        if(rs1.getString("Status").endsWith("Shipped"))
                            status1.setSelectedIndex(0);
                        else if(rs1.getString("Status").endsWith("Delivered"))
                            status1.setSelectedIndex(2);
                        else
                            status1.setSelectedIndex(1);
                    }
                    else{
                    JOptionPane.showMessageDialog(null,"Record Not Found" );
                    }
                    st.setInt(1, Integer.parseInt(CourierID));
                    ResultSet rs= st.executeQuery();
                    
                    if(rs.next()){
                        
                        delivery_date.setDate(rs.getDate("Date"));
                        Receiver_Customer_id.setText(rs.getString("C_id"));
                        
                    }
                    delivery_date.setDateFormatString("dd-MMM-y");
                    st2.setInt(1, Integer.parseInt(CourierID));
                    ResultSet rs2= st2.executeQuery();
                    if(rs2.next()){
                        Sender_Customer_id.setText(rs2.getString("C_id"));
                        
                    }
                }
                catch(SQLException e)
                {
                    System.err.print(e);
                }
    }
    private void iniVeriables(){
        //System.out.print("courier\n");
        CourierID=courier_id.getText();
        Weight=weight.getText();
        Charges=charges.getText();
        Discount=discount.getText();
        AmountPaid=amount_paid.getText();
        employeeID = employee_id.getText();
        serviceType = service_type.getSelectedItem().toString();
        status2 = status1.getSelectedItem().toString();
        Customer_ID = Sender_Customer_id.getText();
    }
    private void cleardata()
    {
        Sender_Customer_id.setText(null);
        Receiver_Customer_id.setText(null);
        courier_id.setText(null);
        weight.setText(null);
        discount.setText(null);
        charges.setText(null);
        amount_paid.setText(null);
        employee_id.setText(null);
        set_employee_id.setText("Record Not Found");
        service_type.setSelectedIndex(0);
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Receiver_Customer_id;
    private javax.swing.JTextField Sender_Customer_id;
    private javax.swing.JTextField amount_paid;
    private javax.swing.JButton back_search;
    private javax.swing.JTextField charges;
    private javax.swing.JTextField courier_id;
    private javax.swing.JLabel customerID;
    private com.toedter.calendar.JDateChooser delivery_date;
    private javax.swing.JTextField discount;
    private javax.swing.JTextField employee_id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton next;
    private javax.swing.JComboBox<String> service_type;
    private javax.swing.JLabel set_employee_id;
    private javax.swing.JPanel status;
    private javax.swing.JComboBox<String> status1;
    private javax.swing.JTextField weight;
    // End of variables declaration//GEN-END:variables
}
