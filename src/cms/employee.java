/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cms;

import function.*;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author Computer
 */
public class employee extends javax.swing.JInternalFrame {

    /**
     * Creates new form employee
     */
    public employee() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        employee_id = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        mob_no = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        address = new javax.swing.JTextArea();
        mail_id = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        insert = new javax.swing.JButton();
        update = new javax.swing.JButton();
        DELETE = new javax.swing.JButton();

        setTitle("Employee Detail");
        setPreferredSize(new java.awt.Dimension(747, 458));

        jLabel1.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("EmployeeID");

        jLabel2.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Name");

        jLabel3.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Mobile No");

        jLabel4.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Address");

        jLabel5.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Mail ID");

        employee_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                employee_idKeyPressed(evt);
            }
        });

        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameKeyPressed(evt);
            }
        });

        mob_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mob_noKeyPressed(evt);
            }
        });

        address.setColumns(20);
        address.setRows(5);
        jScrollPane1.setViewportView(address);

        search.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        search.setText("SEARCH");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        insert.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        insert.setText("INSERT");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        update.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                updateKeyPressed(evt);
            }
        });

        DELETE.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        DELETE.setText("DELETE");
        DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(employee_id, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mob_no)
                            .addComponent(name)
                            .addComponent(mail_id)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(search)
                        .addGap(60, 60, 60)
                        .addComponent(insert)
                        .addGap(60, 60, 60)
                        .addComponent(update)
                        .addGap(60, 60, 60)
                        .addComponent(DELETE)))
                .addGap(182, 182, 182))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(employee_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(mob_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mail_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search)
                    .addComponent(insert)
                    .addComponent(update)
                    .addComponent(DELETE))
                .addGap(61, 61, 61))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String employeeID;
    String ename;
    String emob_no;
    String eaddress;
    String emailid;
    public static final int MYSQL_DUPLICATE_PK = 1062;
    
    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        employeeID = employee_id.getText();
        try
        (
                Connection myconn = DBConnection.getConnection();
                PreparedStatement st1=  myconn.prepareStatement("select * from employee where E_id=?");
                ){
             if(!employeeID.isEmpty()){
               st1.setInt(1, Integer.parseInt(employeeID));
                ResultSet rs1= st1.executeQuery();
               
               if(rs1.next()){
                   name.setText(rs1.getString("E_name"));
                   mob_no.setText(rs1.getString("E_mobno"));
                   address.setText(rs1.getString("E_add"));
                   mail_id.setText(rs1.getString("E_mailid"));
               }
               else{
                    
                    JOptionPane.showMessageDialog(null,"Record Not Found" );
               }
                            
               
                
            }
            else{
                JOptionPane.showMessageDialog(null,"Fill All required data" );
            }
        }
        catch(SQLException e)
        {
            System.err.print(e);
        }
    }//GEN-LAST:event_searchActionPerformed

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        // TODO add your handling code here:
        iniVeriable();
        
        try(
                Connection myconn = DBConnection.getConnection();
                PreparedStatement st = myconn.prepareStatement("insert into employee values (?,?,?,?,?)");
                ){
                boolean v=false;
                if(!emailid.isEmpty()){
                   
                    if(validate.getEmailValidate(emailid)){
                        v=true;
                    }
                    else{
                        JOptionPane.showMessageDialog(null,"Enter Valid Email" );
                    }
                }
                
                boolean s=false;
                
                   
                 if(emob_no.length()==10){
                        s=true;
                  }
                  else{
                       JOptionPane.showMessageDialog(null,"Enter Valid Mobile No" );
                  }
                
                
                    boolean a=false;
               if(!employeeID.isEmpty() && !ename.isEmpty() &&  v && s){
                st.setInt(1, Integer.parseInt(employeeID));
                st.setString(2, ename);
                st.setString(3, emob_no);
                st.setString(4, eaddress);
                st.setString(5, emailid);
               
                st.executeUpdate();
                JOptionPane.showMessageDialog(null,"Insertion Sucessfull" );
                cleardata();
                a=true;
            }
            if(!a && v) {
                JOptionPane.showMessageDialog(null,"Fill All required data" );
            }
                
            
            
            
        }
        catch(SQLException e)
        {
            System.err.print(e);
           if(e.getErrorCode() == MYSQL_DUPLICATE_PK ){
                 JOptionPane.showMessageDialog(null,"Duplicate Employee ID" );
            }
        }
    }//GEN-LAST:event_insertActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        iniVeriable();
         try(
                 Connection myconn = DBConnection.getConnection();
                 ){
            
           if(!employeeID.isEmpty() || !ename.isEmpty() || !emob_no.isEmpty() )
           {
            
            if(!ename.isEmpty()){
                PreparedStatement st = myconn.prepareStatement("update employee set E_name=? where E_id=?");
                st.setString(1, ename);
                st.setInt(2, Integer.parseInt(employeeID));
                st.executeUpdate();
                
            }
            if(!emob_no.isEmpty()){
                PreparedStatement st = myconn.prepareStatement("update employee set E_mobno=? where E_id=?");
                st.setString(1, emob_no);
                st.setInt(2, Integer.parseInt(employeeID));
                st.executeUpdate();
                
            }
            if(!eaddress.isEmpty()){
                PreparedStatement st = myconn.prepareStatement("update employee set E_add=? where E_id=?");
                st.setString(1, eaddress);
                st.setInt(2, Integer.parseInt(employeeID));
                st.executeUpdate();
                
            }
            if(!emailid.isEmpty()){
                PreparedStatement st = myconn.prepareStatement("update employee set E_mailid=? where E_id=?");
                st.setString(1, emailid);
                st.setInt(2, Integer.parseInt(employeeID));
                st.executeUpdate();
                
            }
           
            JOptionPane.showMessageDialog(null,"Updation Sucessfull" );
            cleardata();
           }
           else
           {
              JOptionPane.showMessageDialog(null,"Fill All required data" ); 
           }
            
       }
         catch(SQLException e)
        {
            System.err.print(e);
        }
    }//GEN-LAST:event_updateActionPerformed

    private void DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEActionPerformed
        // TODO add your handling code here:
        employeeID = employee_id.getText();
        try
        (
                Connection myconn = DBConnection.getConnection();
                
                 PreparedStatement st = myconn.prepareStatement("delete from employee where E_id=?");
                ){
                    st.setInt(1, Integer.parseInt(employeeID));
                     st.executeUpdate();
                    JOptionPane.showMessageDialog(null,"Deletion Sucessfull" );
                    cleardata();
              }
           
        
        catch(SQLException e)
        {
            System.err.print(e);
        }
    }//GEN-LAST:event_DELETEActionPerformed

    private void employee_idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employee_idKeyPressed
        // TODO add your handling code here:
         char c = evt.getKeyChar();
         
         
        if(Character.isDigit(c) ||  Character.isISOControl(c) ){
             employee_id.setEditable(true);
         }
        else{
             employee_id.setEditable(false);
         }
    }//GEN-LAST:event_employee_idKeyPressed

    private void mob_noKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mob_noKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
         
        if(Character.isDigit(c) || Character.isISOControl(c)){
             mob_no.setEditable(true);
         }
        else{
             mob_no.setEditable(false);
         }
    }//GEN-LAST:event_mob_noKeyPressed

    private void nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
         
        if(Character.isAlphabetic(c) ||  Character.isISOControl(c) || Character.isWhitespace(c)){
             name.setEditable(true);
         }
        else{
             name.setEditable(false);
         }
    }//GEN-LAST:event_nameKeyPressed

    private void updateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_updateKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateKeyPressed
     public void cleardata()
    {
        employee_id.setText(null);
        name.setText(null);
        mob_no.setText(null);
        mail_id.setText(null);
        address.setText(null);   
    }
    public void iniVeriable(){
        employeeID =employee_id.getText();
         ename= name.getText();
         emob_no = mob_no.getText();
         eaddress = address.getText();
         emailid = mail_id.getText();
         
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DELETE;
    private javax.swing.JTextArea address;
    private javax.swing.JTextField employee_id;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mail_id;
    private javax.swing.JTextField mob_no;
    private javax.swing.JTextField name;
    private javax.swing.JButton search;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
