/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cms;

import function.DBConnection;
import function.validate;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;

import javax.swing.JOptionPane;
/**
 *
 * @author Computer
 */
public class customer extends javax.swing.JInternalFrame {

   

    /**
     * Creates new form customer
     */
    public customer() {
        initComponents();
        inibutten();
        
        if(validate.getValue()==1){
            this.setTitle("ADD Sender Customer Details");
        }
        else if(validate.getValue()==2){
            this.setTitle("ADD Receiver Customer Details");
        }
        
    }
    private Connection myconn2;
    public customer(Connection myconn1) {
        initComponents();
        inibutten();
        myconn2 = myconn1;
        if(validate.getValue()==1){
            this.setTitle("ADD Sender Customer Details");
        }
        else if(validate.getValue()==2){
            this.setTitle("ADD Receiver Customer Details");
        }
        
    }
    
    
    private void inibutten(){
        if(validate.getValue()==1)
        {
            back.setVisible(false);
            
            
        }
        if(validate.getValue()==1 || validate.getValue()==2) {
            update.setVisible(false);
            
            delete_next.setText("NEXT");
        }
        else{
            update.setVisible(true);
            back.setVisible(false);
            delete_next.setText("DELETE");
            
        }
    };
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        customer_id = new javax.swing.JTextField();
        first_name = new javax.swing.JTextField();
        last_name = new javax.swing.JTextField();
        mobile_no = new javax.swing.JTextField();
        mail_id = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        address_text = new javax.swing.JTextArea();
        search = new javax.swing.JButton();
        insert = new javax.swing.JButton();
        delete_next = new javax.swing.JButton();
        back = new javax.swing.JButton();
        update = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setTitle("Customer Detail");
        setPreferredSize(new java.awt.Dimension(747, 458));

        jLabel1.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("CustomerID");

        jLabel2.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("FirstName");

        jLabel3.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Mobile NO");

        jLabel5.setBackground(new java.awt.Color(153, 204, 255));
        jLabel5.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Mail ID");

        jLabel6.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Address");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("LastName");

        customer_id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                customer_idKeyPressed(evt);
            }
        });

        first_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                first_nameKeyPressed(evt);
            }
        });

        last_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                last_nameKeyPressed(evt);
            }
        });

        mobile_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mobile_noKeyPressed(evt);
            }
        });

        address_text.setColumns(20);
        address_text.setRows(5);
        jScrollPane1.setViewportView(address_text);

        search.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        search.setText("SEARCH");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        insert.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        insert.setText("INSERT");
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        delete_next.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        delete_next.setText("DELETE");
        delete_next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_nextActionPerformed(evt);
            }
        });

        back.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        back.setText("BACK");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(back)
                        .addGap(60, 60, 60)
                        .addComponent(search)
                        .addGap(61, 61, 61)
                        .addComponent(insert)
                        .addGap(60, 60, 60)
                        .addComponent(update)
                        .addGap(60, 60, 60)
                        .addComponent(delete_next))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(19, 19, 19)
                                    .addComponent(jLabel6)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(5, 5, 5))
                            .addComponent(jLabel5))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(first_name, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(last_name, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(customer_id, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mobile_no, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mail_id, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(131, 131, 131))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customer_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(first_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(last_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mobile_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(mail_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search)
                    .addComponent(insert)
                    .addComponent(update)
                    .addComponent(delete_next)
                    .addComponent(back))
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    String customerID;
    String firstName;
    String lastName;
    String mobileNo;
    String mailid;
    String addressText;
    public static final int MYSQL_DUPLICATE_PK = 1062;
    
    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        // TODO add your handling code here:
        iniVeriable();
        
        try(
                Connection myconn = DBConnection.getConnection();
                PreparedStatement st = myconn.prepareStatement("insert into customers values (?,?,?,?,?,?)");
                ){
                boolean v=false;
                if(!mailid.isEmpty()){
                   
                    if(validate.getEmailValidate(mailid)){
                        v=true;
                    }
                    else{
                        JOptionPane.showMessageDialog(null,"Enter Valid Email" );
                    }
                }
                
                boolean s=false;
                
                   
                 if(mobileNo.length()==10){
                        s=true;
                  }
                  else{
                       JOptionPane.showMessageDialog(null,"Enter Valid Mobile No" );
                  }
                
                
                    boolean a=false;
               if(!customerID.isEmpty() && !firstName.isEmpty() && !lastName.isEmpty()  && v && s){
                st.setInt(1, Integer.parseInt(customerID));
                st.setString(2, firstName);
                st.setString(3, lastName);
                st.setString(4, mobileNo);
                st.setString(5, mailid);
                st.setString(6, addressText);
                st.executeUpdate();
                JOptionPane.showMessageDialog(null,"Insertion Sucessfull" );
                if(validate.getValue()==0){
                    cleardata();
                }     
                a=true;
            }
            if(!a && v) {
                JOptionPane.showMessageDialog(null,"Fill All required data" );
            }
                
            
            
            
        }
        catch(SQLException e)
        {
            System.err.print(e);
           if(e.getErrorCode() == MYSQL_DUPLICATE_PK ){
                 JOptionPane.showMessageDialog(null,"Duplicate Customer ID" );
            }
        }
    }//GEN-LAST:event_insertActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        customerID = customer_id.getText();
        try
        (
                Connection myconn = DBConnection.getConnection();
                PreparedStatement st1=  myconn.prepareStatement("select * from customers where C_id=?");
                ){
             if(!customerID.isEmpty()){
               st1.setInt(1, Integer.parseInt(customerID));
                ResultSet rs1= st1.executeQuery();
               
               if(rs1.next()){
                   first_name.setText(rs1.getString("F_name"));
                   last_name.setText(rs1.getString("L_name"));
                   mobile_no.setText(rs1.getString("C_mobno"));
                   mail_id.setText(rs1.getString("C_mailid"));
                   address_text.setText(rs1.getString("C_add"));
                   
                   
               }
               else{
                    
                    JOptionPane.showMessageDialog(null,"Record Not Found" );
               }
                            
               
                
            }
            else{
                JOptionPane.showMessageDialog(null,"Fill All required data" );
            }
        }
        catch(SQLException e)
        {
            System.err.print(e);
        }
    }//GEN-LAST:event_searchActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        iniVeriable();
         try(
                 Connection myconn = DBConnection.getConnection();
                 ){
            
           if(!customerID.isEmpty() || !firstName.isEmpty() || !mobileNo.isEmpty() || !mailid.isEmpty() || !addressText.isEmpty())
           {
            
            if(!firstName.isEmpty()){
                PreparedStatement st = myconn.prepareStatement("update customers set F_name=? where C_id=?");
                st.setString(1, firstName);
                st.setInt(2, Integer.parseInt(customerID));
                st.executeUpdate();
                
            }
            if(!lastName.isEmpty()){
                PreparedStatement st = myconn.prepareStatement("update customers set L_name=? where C_id=?");
                st.setString(1, lastName);
                st.setInt(2, Integer.parseInt(customerID));
                st.executeUpdate();
                
            }
            if(!mobileNo.isEmpty()){
                PreparedStatement st = myconn.prepareStatement("update customers set C_mobno=? where C_id=?");
                st.setString(1, mobileNo);
                st.setInt(2, Integer.parseInt(customerID));
                st.executeUpdate();
                
            }
            if(!mailid.isEmpty()){
                PreparedStatement st = myconn.prepareStatement("update customers set C_mailid=? where C_id=?");
                st.setString(1, mailid);
                st.setInt(2, Integer.parseInt(customerID));
                st.executeUpdate();
                
            }
            if(!addressText.isEmpty()){
                PreparedStatement st = myconn.prepareStatement("update customers set C_add=? where C_id=?");
                st.setString(1, addressText);
                st.setInt(2, Integer.parseInt(customerID));
                st.executeUpdate();
                
            }
            JOptionPane.showMessageDialog(null,"Updation Sucessfull" );
            cleardata();
            
           }
           else
           {
              JOptionPane.showMessageDialog(null,"Fill All required data" ); 
           }
            
       }
         catch(SQLException e)
        {
            System.err.print(e);
        }
    }//GEN-LAST:event_updateActionPerformed

    private void delete_nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_nextActionPerformed
        // TODO add your handling code here:
        customerID = customer_id.getText();
        if(validate.getValue()==0){
            
        try
        (
                Connection myconn = DBConnection.getConnection();
                
                 PreparedStatement st = myconn.prepareStatement("delete from customers where C_id=?");
                ){
                    st.setInt(1, Integer.parseInt(customerID));
                     st.executeUpdate();
                    JOptionPane.showMessageDialog(null,"Deletion Sucessfull" );
                    cleardata();
                    
              }
           
        
        catch(SQLException e)
        {
            System.err.print(e);
        }
        }
        else
        {
            
            if(validate.getValue()==1){
                validate.setValueSCustomerId(Integer.parseInt(customerID));
                validate.setValueC(0);
                
                
                  // Connection myconn1 = DBConnection.getConnection();
                   courier c =new courier(myconn2);
                    JDesktopPane j = getDesktopPane();
                    j.add(c);
                    c.show();
                
                
            }
            else{
                validate.setValueRCustomerId(Integer.parseInt(customerID));
                
                confirmation c =new confirmation(myconn2);
                JDesktopPane j = getDesktopPane();
                j.add(c);
                c.show();
            }
        }
        
    }//GEN-LAST:event_delete_nextActionPerformed
   /* public void deleteCourierDetails(){
        try
        (
                Connection myconn = DBConnection.getConnection();
                
                 PreparedStatement st = myconn.prepareStatement("delete from couriers where Cr_id=?");
                ){
                    st.setInt(1, validate.getValueCourierId());
                     st.executeUpdate(); 
                     validate.setValuenext(false);
              }
           
        
        catch(SQLException e)
        {
            System.err.print(e);
        }
    }*/
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        if(validate.getValue()==2){
            try {
                //if(validate.getValuenext()){
                //deleteCourierDetails();
                //}
                myconn2.rollback();
            } catch (SQLException ex) {
                Logger.getLogger(customer.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        this.setVisible(false);
    }//GEN-LAST:event_backActionPerformed

    private void customer_idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customer_idKeyPressed
        // TODO add your handling code here:
         char c = evt.getKeyChar();
         
         
        if(Character.isDigit(c) ||  Character.isISOControl(c) ){
             customer_id.setEditable(true);
         }
        else{
             customer_id.setEditable(false);
         }
    }//GEN-LAST:event_customer_idKeyPressed

    private void first_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_first_nameKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
         
        if(Character.isAlphabetic(c) ||  Character.isISOControl(c)){
             first_name.setEditable(true);
         }
        else{
             first_name.setEditable(false);
         }
    }//GEN-LAST:event_first_nameKeyPressed

    private void mobile_noKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobile_noKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
         
        if(Character.isDigit(c) || Character.isISOControl(c)){
             mobile_no.setEditable(true);
         }
        else{
             mobile_no.setEditable(false);
         }
    }//GEN-LAST:event_mobile_noKeyPressed

    private void last_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_last_nameKeyPressed
        // TODO add your handling code here:
        char c = evt.getKeyChar();
         
        if(Character.isAlphabetic(c) ||  Character.isISOControl(c)){
             last_name.setEditable(true);
         }
        else{
             last_name.setEditable(false);
         }
    }//GEN-LAST:event_last_nameKeyPressed

     public void iniVeriable(){
        customerID =customer_id.getText();
         firstName= first_name.getText();
         lastName = last_name.getText();
         mobileNo = mobile_no.getText();
         mailid = mail_id.getText();
         addressText = address_text.getText();
    }
     public void cleardata()
    {
        customer_id.setText(null);
        first_name.setText(null);
        last_name.setText(null);
        mobile_no.setText(null);
        mail_id.setText(null);
        address_text.setText(null);
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea address_text;
    private javax.swing.JButton back;
    private javax.swing.JTextField customer_id;
    private javax.swing.JButton delete_next;
    private javax.swing.JTextField first_name;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField last_name;
    private javax.swing.JTextField mail_id;
    private javax.swing.JTextField mobile_no;
    private javax.swing.JButton search;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
